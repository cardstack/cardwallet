export default [
  {
    type: 'event',
    name: 'CreatePrepaidCard',
    inputs: [
      {
        type: 'address',
        name: 'issuer',
        internalType: 'address',
        indexed: false,
      },
      {
        type: 'address',
        name: 'card',
        internalType: 'address',
        indexed: false,
      },
      {
        type: 'address',
        name: 'token',
        internalType: 'address',
        indexed: false,
      },
      {
        type: 'uint256',
        name: 'amount',
        internalType: 'uint256',
        indexed: false,
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'OwnershipTransferred',
    inputs: [
      {
        type: 'address',
        name: 'previousOwner',
        internalType: 'address',
        indexed: true,
      },
      {
        type: 'address',
        name: 'newOwner',
        internalType: 'address',
        indexed: true,
      },
    ],
    anonymous: false,
  },
  {
    type: 'function',
    stateMutability: 'view',
    payable: false,
    outputs: [{ type: 'uint8', name: '', internalType: 'uint8' }],
    name: 'MAXIMUM_NUMBER_OF_CARD',
    inputs: [],
    constant: true,
  },
  {
    type: 'function',
    stateMutability: 'view',
    payable: false,
    outputs: [{ type: 'bytes4', name: '', internalType: 'bytes4' }],
    name: 'SWAP_OWNER',
    inputs: [],
    constant: true,
  },
  {
    type: 'function',
    stateMutability: 'view',
    payable: false,
    outputs: [{ type: 'bytes4', name: '', internalType: 'bytes4' }],
    name: 'TRANSER_AND_CALL',
    inputs: [],
    constant: true,
  },
  {
    type: 'function',
    stateMutability: 'nonpayable',
    payable: false,
    outputs: [{ type: 'bool', name: '', internalType: 'bool' }],
    name: 'addPayableToken',
    inputs: [{ type: 'address', name: '_token', internalType: 'address' }],
    constant: false,
  },
  {
    type: 'function',
    stateMutability: 'nonpayable',
    payable: false,
    outputs: [{ type: 'bool', name: '', internalType: 'bool' }],
    name: 'addTally',
    inputs: [{ type: 'address', name: '_tally', internalType: 'address' }],
    constant: false,
  },
  {
    type: 'function',
    stateMutability: 'view',
    payable: false,
    outputs: [{ type: 'bytes', name: 'signatures', internalType: 'bytes' }],
    name: 'appendPrepaidCardAdminSignature',
    inputs: [
      { type: 'address', name: 'owner', internalType: 'address' },
      { type: 'bytes', name: 'signature', internalType: 'bytes' },
    ],
    constant: true,
  },
  {
    type: 'function',
    stateMutability: 'view',
    payable: false,
    outputs: [
      { type: 'address', name: 'issuer', internalType: 'address' },
      { type: 'address', name: 'issueToken', internalType: 'address' },
    ],
    name: 'cardDetails',
    inputs: [{ type: 'address', name: '', internalType: 'address' }],
    constant: true,
  },
  {
    type: 'function',
    stateMutability: 'view',
    payable: false,
    outputs: [
      { type: 'bytes', name: 'contractSignature', internalType: 'bytes' },
    ],
    name: 'getContractSignature',
    inputs: [],
    constant: true,
  },
  {
    type: 'function',
    stateMutability: 'view',
    payable: false,
    outputs: [{ type: 'uint256', name: '', internalType: 'uint256' }],
    name: 'getMaximumAmount',
    inputs: [],
    constant: true,
  },
  {
    type: 'function',
    stateMutability: 'view',
    payable: false,
    outputs: [{ type: 'uint256', name: '', internalType: 'uint256' }],
    name: 'getMinimumAmount',
    inputs: [],
    constant: true,
  },
  {
    type: 'function',
    stateMutability: 'view',
    payable: false,
    outputs: [{ type: 'bytes', name: '', internalType: 'bytes' }],
    name: 'getPayData',
    inputs: [
      { type: 'address', name: 'token', internalType: 'address' },
      { type: 'address', name: 'merchant', internalType: 'address' },
      { type: 'uint256', name: 'amount', internalType: 'uint256' },
    ],
    constant: true,
  },
  {
    type: 'function',
    stateMutability: 'view',
    payable: false,
    outputs: [{ type: 'bytes', name: '', internalType: 'bytes' }],
    name: 'getSellCardData',
    inputs: [
      { type: 'address', name: 'from', internalType: 'address' },
      { type: 'address', name: 'to', internalType: 'address' },
    ],
    constant: true,
  },
  {
    type: 'function',
    stateMutability: 'view',
    payable: false,
    outputs: [{ type: 'bytes32', name: '', internalType: 'bytes32' }],
    name: 'getSellCardHash',
    inputs: [
      { type: 'address', name: 'prepaidCard', internalType: 'address payable' },
      { type: 'address', name: 'depot', internalType: 'address' },
      { type: 'address', name: 'customer', internalType: 'address' },
      { type: 'uint256', name: 'nonce', internalType: 'uint256' },
    ],
    constant: true,
  },
  {
    type: 'function',
    stateMutability: 'view',
    payable: false,
    outputs: [{ type: 'bytes', name: '', internalType: 'bytes' }],
    name: 'getSplitCardData',
    inputs: [
      { type: 'address', name: 'cardOwner', internalType: 'address' },
      { type: 'uint256[]', name: 'subCardAmount', internalType: 'uint256[]' },
    ],
    constant: true,
  },
  {
    type: 'function',
    stateMutability: 'view',
    payable: false,
    outputs: [{ type: 'bytes32', name: '', internalType: 'bytes32' }],
    name: 'getSplitCardHash',
    inputs: [
      { type: 'address', name: 'card', internalType: 'address payable' },
      { type: 'address', name: 'depot', internalType: 'address' },
      { type: 'address', name: 'token', internalType: 'address' },
      { type: 'uint256[]', name: 'cardAmounts', internalType: 'uint256[]' },
      { type: 'uint256', name: '_nonce', internalType: 'uint256' },
    ],
    constant: true,
  },
  {
    type: 'function',
    stateMutability: 'view',
    payable: false,
    outputs: [{ type: 'address[]', name: '', internalType: 'address[]' }],
    name: 'getTallys',
    inputs: [],
    constant: true,
  },
  {
    type: 'function',
    stateMutability: 'view',
    payable: false,
    outputs: [{ type: 'address[]', name: '', internalType: 'address[]' }],
    name: 'getTokens',
    inputs: [],
    constant: true,
  },
  {
    type: 'function',
    stateMutability: 'view',
    payable: false,
    outputs: [{ type: 'bytes32', name: '', internalType: 'bytes32' }],
    name: 'getTransactionHash',
    inputs: [
      { type: 'address', name: 'card', internalType: 'address payable' },
      { type: 'address', name: 'to', internalType: 'address' },
      { type: 'bytes', name: 'data', internalType: 'bytes' },
      { type: 'uint256', name: 'nonce', internalType: 'uint256' },
    ],
    constant: true,
  },
  {
    type: 'function',
    stateMutability: 'view',
    payable: false,
    outputs: [{ type: 'address', name: '', internalType: 'address' }],
    name: 'gnosisProxyFactory',
    inputs: [],
    constant: true,
  },
  {
    type: 'function',
    stateMutability: 'view',
    payable: false,
    outputs: [{ type: 'address', name: '', internalType: 'address' }],
    name: 'gnosisSafe',
    inputs: [],
    constant: true,
  },
  {
    type: 'function',
    stateMutability: 'view',
    payable: false,
    outputs: [{ type: 'bool', name: '', internalType: 'bool' }],
    name: 'isOwner',
    inputs: [],
    constant: true,
  },
  {
    type: 'function',
    stateMutability: 'view',
    payable: false,
    outputs: [{ type: 'bool', name: '', internalType: 'bool' }],
    name: 'isValidAmount',
    inputs: [
      { type: 'address', name: 'token', internalType: 'address' },
      { type: 'uint256', name: 'amount', internalType: 'uint256' },
    ],
    constant: true,
  },
  {
    type: 'function',
    stateMutability: 'nonpayable',
    payable: false,
    outputs: [{ type: 'bool', name: '', internalType: 'bool' }],
    name: 'onTokenTransfer',
    inputs: [
      { type: 'address', name: 'from', internalType: 'address' },
      { type: 'uint256', name: 'amount', internalType: 'uint256' },
      { type: 'bytes', name: 'data', internalType: 'bytes' },
    ],
    constant: false,
  },
  {
    type: 'function',
    stateMutability: 'view',
    payable: false,
    outputs: [{ type: 'address', name: '', internalType: 'address' }],
    name: 'owner',
    inputs: [],
    constant: true,
  },
  {
    type: 'function',
    stateMutability: 'nonpayable',
    payable: false,
    outputs: [{ type: 'bool', name: '', internalType: 'bool' }],
    name: 'payForMerchant',
    inputs: [
      { type: 'address', name: 'prepaidCard', internalType: 'address payable' },
      { type: 'address', name: 'payableTokenAddr', internalType: 'address' },
      { type: 'address', name: 'merchant', internalType: 'address' },
      { type: 'uint256', name: 'amount', internalType: 'uint256' },
      { type: 'bytes', name: 'signatures', internalType: 'bytes' },
    ],
    constant: false,
  },
  {
    type: 'function',
    stateMutability: 'nonpayable',
    payable: false,
    outputs: [{ type: 'bool', name: '', internalType: 'bool' }],
    name: 'removePayableToken',
    inputs: [{ type: 'address', name: '_token', internalType: 'address' }],
    constant: false,
  },
  {
    type: 'function',
    stateMutability: 'nonpayable',
    payable: false,
    outputs: [{ type: 'bool', name: '', internalType: 'bool' }],
    name: 'removeTally',
    inputs: [{ type: 'address', name: '_tally', internalType: 'address' }],
    constant: false,
  },
  {
    type: 'function',
    stateMutability: 'nonpayable',
    payable: false,
    outputs: [],
    name: 'renounceOwnership',
    inputs: [],
    constant: false,
  },
  {
    type: 'function',
    stateMutability: 'view',
    payable: false,
    outputs: [{ type: 'address', name: '', internalType: 'address' }],
    name: 'revenuePool',
    inputs: [],
    constant: true,
  },
  {
    type: 'function',
    stateMutability: 'payable',
    payable: true,
    outputs: [{ type: 'bool', name: '', internalType: 'bool' }],
    name: 'sellCard',
    inputs: [
      { type: 'address', name: 'prepaidCard', internalType: 'address payable' },
      { type: 'address', name: 'depot', internalType: 'address' },
      { type: 'address', name: 'customer', internalType: 'address' },
      { type: 'bytes', name: 'issuerSignatures', internalType: 'bytes' },
    ],
    constant: false,
  },
  {
    type: 'function',
    stateMutability: 'nonpayable',
    payable: false,
    outputs: [],
    name: 'setup',
    inputs: [
      { type: 'address', name: '_tally', internalType: 'address' },
      { type: 'address', name: '_gsMasterCopy', internalType: 'address' },
      { type: 'address', name: '_gsProxyFactory', internalType: 'address' },
      { type: 'address', name: '_revenuePool', internalType: 'address' },
      { type: 'address[]', name: '_payableTokens', internalType: 'address[]' },
      { type: 'uint256', name: '_minAmount', internalType: 'uint256' },
      { type: 'uint256', name: '_maxAmount', internalType: 'uint256' },
    ],
    constant: false,
  },
  {
    type: 'function',
    stateMutability: 'payable',
    payable: true,
    outputs: [{ type: 'bool', name: '', internalType: 'bool' }],
    name: 'splitCard',
    inputs: [
      { type: 'address', name: 'prepaidCard', internalType: 'address payable' },
      { type: 'address', name: 'depot', internalType: 'address' },
      { type: 'address', name: 'issueToken', internalType: 'address' },
      { type: 'uint256[]', name: 'cardAmounts', internalType: 'uint256[]' },
      { type: 'bytes', name: 'signatures', internalType: 'bytes' },
    ],
    constant: false,
  },
  {
    type: 'function',
    stateMutability: 'nonpayable',
    payable: false,
    outputs: [],
    name: 'transferOwnership',
    inputs: [{ type: 'address', name: 'newOwner', internalType: 'address' }],
    constant: false,
  },
  {
    type: 'function',
    stateMutability: 'nonpayable',
    payable: false,
    outputs: [],
    name: 'updateMaxinumAmount',
    inputs: [{ type: 'uint256', name: '_maxValue', internalType: 'uint256' }],
    constant: false,
  },
  {
    type: 'function',
    stateMutability: 'nonpayable',
    payable: false,
    outputs: [],
    name: 'updateMininumAmount',
    inputs: [{ type: 'uint256', name: '_minValue', internalType: 'uint256' }],
    constant: false,
  },
];
