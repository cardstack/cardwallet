# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:android)

platform :android do
  lane :internal do
    internalVersionCodes = google_play_track_version_codes(track: 'internal')

    currentVersionCode = internalVersionCodes.max
    nextVersionCode = currentVersionCode + 1

    gradle(
      task: 'bundle', 
      build_type: 'Release',     
      properties: {
      'versionCode' => nextVersionCode,
    })

    # upload_to_play_store(track: 'internal', version_name: nextVersionCode.to_s)

    # As build was successful, set an appropriate git tag
    set_git_tag(build_number: nextVersionCode)

    # Push new tag
    push_to_git_remote()
  end

  lane :alpha do
    gradle(task: 'assemble', build_type: 'Release')
    upload_to_play_store(track: 'alpha')
  end
  
  lane :beta do
    gradle(task: 'assemble', build_type: 'Release')
    upload_to_play_store(track: 'beta')
  end

  desc "Deploy a new version to the Google Play"
  lane :production do
    gradle(task: "clean assembleRelease")
    upload_to_play_store
  end

  desc "Set Git Tag"
  lane :set_git_tag do |options|
    APK_LOCATION = "#{lane_context[SharedValues::GRADLE_APK_OUTPUT_PATH]}"   
    version = get_android_version(apk: APK_LOCATION)

    # Create a local tag with the new version
    add_git_tag(
      tag: "v#{version}-ios-#{options[:build_number]}",
      prefix: "v",
      build_number: version
    )

    # Push new tag
    push_to_git_remote()
  end

end
