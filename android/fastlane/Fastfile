# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:android)

platform :android do
  lane :internal do
    internalVersionCodes = google_play_track_version_codes(track: 'internal')

    currentVersionCode = internalVersionCodes.max
    nextVersionCode = currentVersionCode + 1

    gradle(
      task: 'bundle', 
      build_type: 'Release',     
      properties: {
      'versionCode' => nextVersionCode,
    })

    upload_to_play_store(track: 'internal', version_name: nextVersionCode.to_s)

    # As build was successful, set an appropriate git tag
    set_git_tag(build_number: nextVersionCode)

    # Push new tag
    push_git_tags()
  end

  desc "Version bump"
  lane :version_bump do |options|
    p options[:type]
    type = ENV['VERSION_CHANGE_TYPE'] ? ENV['VERSION_CHANGE_TYPE'] : options[:type]
    if ['major', 'minor', 'patch'].include?(type)

      old = gradle_properties(
        property_name: "VERSION_NAME"
      )

      oldArr = old.split('.').map{|v| v.to_i}
      version = old

      if type == "patch"
        version = "#{oldArr[0]}.#{oldArr[1]}.#{oldArr[2] + 1}"
      elsif type == "minor"
        version = "#{oldArr[0]}.#{oldArr[1] + 1}.0"
      elsif type == "major"
        version = "#{oldArr[0] + 1}.0.0"
      end

      filename = '../gradle.properties'
      properties = File.read(filename)
      updatedProperties = properties.gsub(/VERSION_NAME=.*/, "VERSION_NAME=" + version)
      File.open(filename, "w") { |file| file << updatedProperties }

      p "Android version updated to " + version
    end
  end

  desc "Set Git Tag"
  lane :set_git_tag do |options|

    version = gradle_properties(
      property_name: "VERSION_NAME"
    )

    # Create a local tag with the new version
    add_git_tag(
      tag: "v#{version}-ios-#{options[:build_number]}",
      prefix: "v",
      build_number: version
    )

    # Push new tag
    push_git_tags()
  end

end
