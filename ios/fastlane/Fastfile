
default_platform(:ios)

STARTING_BUILD_NUMBER = 630

platform :ios do
  before_all do |options|
    setup_ci
  end

  def build_and_release(build_number:, should_upload:)
    ########################
    # Handle build number
    ########################
 

    next_build_number = STARTING_BUILD_NUMBER + build_number.to_i

    ########################
    # Pull certs & profiles
    ########################
    sync_code_signing(type: "appstore")

    ########################
    # Increment the build number
    ########################
    increment_build_number(build_number: next_build_number)

    ########################
    # Build the app
    ########################
    build_ios_app(
      export_method: "app-store",
      include_bitcode: false,
      skip_profile_detection: true,
      scheme: "Rainbow",
      configuration: "Release"
    )

    if should_upload
      upload_to_testflight(
        skip_waiting_for_build_processing: true,
        apple_id: "1549183378",
        username: "hassan@cardstack.com",
        team_id: "QS5AFH4668"
      )
    end

    # As build was successful, set an appropriate git tag
    set_git_tag(build_number: next_build_number)
  end
  
  ########################################################################
  # Alpha Lane
  ########################################################################
  desc "Alpha build"
  lane :alpha do |options|
    decrypt_app_vars(
      namespace: 'alpha'
    )

    build_and_release(build_number: options[:build_number], should_upload: false)
  end

  ########################################################################
  # Beta Lane
  ########################################################################
  desc "Beta build"
  lane :beta do |options| 
    decrypt_app_vars(
      namespace: 'beta'
    )

    build_and_release(build_number: options[:build_number], should_upload: true)
  end

  ########################################################################
  # Production Lane
  ########################################################################
  desc "Production build"
  lane :production do |options|
    decrypt_app_vars(
      namespace: 'release'
    )

    build_and_release(build_number: options[:build_number], should_upload: true)
  end

  desc "Version bump"
  lane :version_bump do |options|
    if ['major', 'minor', 'patch'].include?(ENV['VERSION_CHANGE_TYPE'])
      increment_version_number_in_xcodeproj(
        bump_type: ENV['VERSION_CHANGE_TYPE'],
        target: 'Rainbow'
      )

      version = get_version_number_from_xcodeproj( target: 'Rainbow' )
      p "iOS version updated to " + version
    end
  end

  desc "Set Git Tag"
  lane :set_git_tag do |options|
    version = get_version_number_from_xcodeproj( target: 'Rainbow' )

    # Create a local tag with the new version
    add_git_tag(
      tag: "v#{version}-ios-#{options[:build_number]}",
      prefix: "v",
      build_number: version
    )

    # Push new tag
    push_git_tags()
  end
end