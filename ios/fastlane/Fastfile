default_platform(:ios)

platform :ios do
  ########################################################################
  # Alpha Lane
  ########################################################################
  desc "Alpha build"
  lane :alpha do |options|

    decrypt_app_vars(
      namespace: 'alpha'
    )

    ########################
    # Pull certs & profiles
    ########################
    sync_code_signing(type: "adhoc")

    ########################
    # Build the app
    ########################
    increment_build_number(build_number: options[:build_number])

    # Make sure and set either GYM_WORKSPACE or GYM_PROJECT and GYM_SCHEME
    build_ios_app(
      export_method: "ad-hoc",
      include_bitcode: true
    )
  end

  ########################################################################
  # Beta Lane
  ########################################################################
  desc "Beta build"
  lane :beta do |options| 

    decrypt_app_vars(
      namespace: 'beta'
    )

    ########################
    # Pull certs & profiles
    ########################
    sync_code_signing(type: "appstore")

    ########################
    # Build the app
    ########################
    increment_build_number(build_number: options[:build_number])

    # Make sure and set either GYM_WORKSPACE or GYM_PROJECT and GYM_SCHEME
    build_ios_app(
      export_method: "app-store",
      include_bitcode: true
    )

    ########################
    # Upload to TestFlight
    ########################
    upload_to_testflight(
      changelog: "Beta Release: ${tag}"
    )
  end

  desc "Production build"
  lane :production do |options|
    
    decrypt_app_vars(
      namespace: 'release'
    )

    ########################
    # Pull certs & profiles
    ########################
    sync_code_signing(type: "appstore")

    ########################
    # Build the app
    ########################
    increment_build_number(build_number: options[:build_number])

    # Make sure and set either GYM_WORKSPACE or GYM_PROJECT and GYM_SCHEME
    build_ios_app(
      export_method: "app-store",
      include_bitcode: true
    )

    ########################
    # Upload to AppStore Connect
    ########################
    upload_to_app_store(
      force: true,
      submit_for_review: false,
      automatic_release: false,
      changelog: "Production release: ${tag}"
    )
  end

  desc "Version bump"
  lane :version_bump do |options|
    if ['major', 'minor', 'patch'].include?(ENV['BUMP_TYPE'])
      increment_version_number_in_xcodeproj(
        bump_type: options['BUMP_TYPE'],
      )
    end
  end

  error do |lane, exception|
    if ENV['SLACK_URL']
      # slack(
      #   message: exception.message,
      #   success: false
      # )
    end
  end
end