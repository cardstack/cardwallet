query GetAccountTransactionHistoryData($address: ID!, $skip: Int = 0, $pageSize: Int = 25) {
  account(id: $address) {
    id
    depots {
      safe {
        safeTxns(first: $pageSize, skip: $skip, orderBy: timestamp, orderDirection: desc) {
          timestamp
          transaction {
            ...Transaction
          }
        }
      }
    }
    transactions(first: $pageSize, skip: $skip, orderBy: timestamp, orderDirection: desc) {
      timestamp
      transaction {
        ...Transaction
      }
    }
  }
}

query GetDepotTransactionHistoryData($address: ID!, $skip: Int = 0, $pageSize: Int = 25) {
  safe(id: $address) {
    id
    safeTxns(first: $pageSize, skip: $skip, orderBy: timestamp, orderDirection: desc) {
      timestamp
      transaction {
        ...Transaction
      }
    }
  }
}

query GetDepotTransactionHistoryData($address: ID!, $skip: Int = 0, $pageSize: Int = 25) {
  safe(id: $address) {
    id
    safeTxns(first: $pageSize, skip: $skip, orderBy: timestamp, orderDirection: desc) {
      timestamp
      transaction {
        ...Transaction
      }
    }
  }
}

query GetMerchantTransactionHistoryData($address: ID!, $skip: Int = 0, $pageSize: Int = 25) {
  merchantSafe(id: $address) {
    id
    merchantRevenue {
      id
      revenueEvents(first: $pageSize, skip: $skip, orderBy: timestamp, orderDirection: desc) {
        ...MerchantRevenueEvent
      }
    }
  }
}

query GetPrepaidCardHistoryData($address: ID!) {
  safe(id: $address) {
    prepaidCard {
      payments {
        transaction {
          ...Transaction
        }
      }
      splits {
        transaction {
          ...Transaction
        }
      }
      transfers {
        transaction {
          ...Transaction
        }
      }
      creation {
        transaction {
          ...Transaction
        }
      }
    }
  }
}

query GetLifetimeEarningsAccumulations($address: ID!) {
  merchantSafe (id: $address) {
    id
    spendAccumulations(orderBy: timestamp, orderDirection: asc) {
      timestamp
      amount
      historicSpendBalance
    }
  }
}